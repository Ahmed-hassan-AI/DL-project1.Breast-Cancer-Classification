# -*- coding: utf-8 -*-
"""DL project:1.Breast Cancer Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dx_VdjRPsXBgX1H-1dVgUZQipevGux36
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
import sklearn.datasets

data = sklearn.datasets.load_breast_cancer()
labels=data.target
cols=data.feature_names
data=data.data

df=pd.DataFrame(data,columns=cols)
df['label']=labels

df.shape

df.info()

x=df.drop(columns=['label'],axis=1)
y=df['label']

from sklearn.preprocessing import StandardScaler

standar=StandardScaler()
X_stand=standar.fit_transform(x)
X_stand

X_train,X_test,Y_train,Y_test=train_test_split(X_stand,y,random_state=1,stratify=y,test_size=0.2)

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras.models import Sequential
from keras.layers import Dense

shape=X_stand.shape[1]
model=Sequential([
    Dense(16,input_shape=(30,),activation='relu'),
    Dense(32,activation='relu'),
    Dense(1,activation='sigmoid'),
])

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.summary()

X_train=np.asarray(X_train)
Y_train=np.asarray(Y_train)
X_test=np.asarray(X_test)
Y_test=np.asarray(Y_test)
model.fit(X_train,Y_train,epochs=10,validation_split=0.2)

loss, accuracy = model.evaluate(X_test, Y_test)

Y_test

input=X_test[0].reshape(1,-1)
score=model.predict(input)
if 0.5 > score:
     print('The tumor is malignant.')
else:
     print('The tumor is benign.')